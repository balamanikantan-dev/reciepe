[{"C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\index.js":"1","C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\reportWebVitals.js":"2","C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\App.js":"3","C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\Navbar\\Navbar.js":"4","C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\Home\\Home.js":"5","C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\Context\\Context.js":"6","C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\Reciepe\\Reciepe.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1446,"mtime":1611229118444,"results":"11","hashOfConfig":"9"},{"size":5385,"mtime":1611230508839,"results":"12","hashOfConfig":"9"},{"size":1011,"mtime":1611225752941,"results":"13","hashOfConfig":"9"},{"size":204,"mtime":1611144854346,"results":"14","hashOfConfig":"9"},{"size":5184,"mtime":1611233496517,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1drhi8m",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\index.js",[],["32","33"],"C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\reportWebVitals.js",[],"C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\App.js",["34","35"],"C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\Navbar\\Navbar.js",["36","37","38"],"C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\Home\\Home.js",[],"C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\Context\\Context.js",[],"C:\\Users\\NOEL ROY\\projects\\reciepe\\src\\Reciepe\\Reciepe.js",["39"],"import { CloseOutlined, DeleteOutlined, EditOutlined, PlusCircleFilled } from '@ant-design/icons';\r\nimport { Button, Input, Tooltip } from 'antd'\r\nimport { Form, Modal } from 'antd';\r\nimport React, { useContext, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport MyContext from '../Context/Context';\r\n\r\nconst Reciepe = () => {\r\n    const context = useContext(MyContext)\r\n    const { id } = useParams()\r\n    const history = useHistory()\r\n    const reciepe = context.reciepes.find(r => r.id.toString() === id)\r\n    console.log(reciepe)\r\n    const clickHandle = () => {\r\n        const arr = [...context.reciepes]\r\n        const index = arr.findIndex(ele => ele.id.toString() === id)\r\n        if (index !== -1)\r\n            arr.splice(index, 1)\r\n        context.setReciepes(arr);\r\n        history.push('/')\r\n    }\r\n    const clickerHandle = () => {\r\n        setIsModalVisible(true)\r\n\r\n    }\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const layout = {\r\n    };\r\n    const tailLayout = {\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        const recs = [...context.reciepes]\r\n        const index = recs.findIndex(ele => ele.id.toString() === id)\r\n        recs[index] = { ...recs[index], ...values, ingredients }\r\n        context.setReciepes(recs)\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const newIngredient = () => {\r\n        setIngredients(prev => [...prev, \" \"])\r\n\r\n    }\r\n    const [ingredients, setIngredients] = useState([...reciepe.ingredients])\r\n\r\n    const removeHandler = (index) => {\r\n        // alert()\r\n\r\n        const arr = [...ingredients]\r\n        if (arr.length !== 1) {\r\n            arr.splice(index, 1)\r\n            setIngredients(arr)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {reciepe && (<>Reciepe : {id}<br></br>\r\n              Description :  {reciepe.desc}<br></br>\r\n               Name : {reciepe.name}<br></br>\r\n               Ingredients : {reciepe.ingredients.join(', ')}\r\n            </>)}\r\n            <Tooltip title=\"search\">\r\n                <Button style={{ float: \"right\" }} shape=\"circle\" onClick={clickHandle} icon={<DeleteOutlined />} />\r\n            </Tooltip>\r\n            <Tooltip title=\"search\">\r\n                <Button style={{ float: \"right\" }} shape=\"circle\" onClick={clickerHandle} icon={<EditOutlined />} />\r\n            </Tooltip>\r\n            <Modal title=\"Basic Modal\" okButtonProps={{ htmlType: \"submit\" }} footer={[]} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        ...reciepe,\r\n                    }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Enter the name of the reciepe',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Description\"\r\n                        name=\"desc\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    {ingredients.map((ingredient, index) => {\r\n                        return <Form.Item\r\n                            label=\"Ingredient\"\r\n                            key={index}\r\n\r\n                            rules={[\r\n                                {\r\n\r\n                                    message: '',\r\n\r\n\r\n                                },\r\n                            ]}\r\n\r\n\r\n\r\n                        >\r\n\r\n\r\n                            <Input value={ingredient} style={{ width: \"95%\" }} onChange={(event) => {\r\n                                const arr = [...ingredients]\r\n                                arr[index] = event.target.value;\r\n                                setIngredients(arr)\r\n                            }} /><CloseOutlined onClick={() => removeHandler(index)} />\r\n\r\n                        </Form.Item>\r\n                    })}\r\n                    <PlusCircleFilled onClick={newIngredient} style={{ float: \"right\" }} />\r\n\r\n\r\n\r\n                    <Button key=\"submit\" htmlType=\"submit\" type=\"primary\" >\r\n                        Submit\r\n</Button>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default Reciepe",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":1,"column":27,"nodeType":"46","messageId":"47","endLine":1,"endColumn":36},{"ruleId":"44","severity":1,"message":"49","line":1,"column":31,"nodeType":"46","messageId":"47","endLine":1,"endColumn":39},{"ruleId":"44","severity":1,"message":"50","line":6,"column":16,"nodeType":"46","messageId":"47","endLine":6,"endColumn":26},{"ruleId":"44","severity":1,"message":"51","line":30,"column":11,"nodeType":"46","messageId":"47","endLine":30,"endColumn":21},{"ruleId":"44","severity":1,"message":"51","line":38,"column":11,"nodeType":"46","messageId":"47","endLine":38,"endColumn":21},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Checkbox' is defined but never used.","'useHistory' is defined but never used.","'tailLayout' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]